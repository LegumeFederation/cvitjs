{"version":3,"sources":["Components/GenotypeSelect.js","Components/ReferenceForm.js","Components/CompareForm.js","Components/TrackOptionsSelect.js","Components/BaseOptionsSelect.js","Components/OptionsForm.js","Components/HelpTopics/About.js","Components/HelpTopics/ReferenceGenotype.js","Components/HelpTopics/ComparisonGenotype.js","Components/HelpTopics/GeneralOptions.js","Components/HelpTopics/DisplayNone.js","Components/HelpTopics/DisplayHaplotype.js","Components/HelpTopics/DisplayHistogram.js","Components/HelpTopics/DisplayHeat.js","Components/HelpModal.js","Components/DownloadModal.js","App.js","serviceWorker.js","index.js"],"names":["popover","position","zIndex","cover","top","right","bottom","left","GenotypeSelector","state","selectedDataset","selectedGenotype","displayColorPicker","color","datasetChange","_this","setState","props","setDataset","append","dataset","genotype","appendDataset","idx","gtChange","colorClick","colorClose","formatDatasetValue","colorSet","hex","this","selected","_this2","_this$state","gtOpt","genotypes","react_default","a","createElement","className","onClick","style","background","react_color_lib","onChange","react_select_browser_esm","defaultValue","label","classNamePrefix","value","isClearable","isDisabled","filterOption","createFilter","ignoreAccents","options","datasets","components","Option","CustomOption","length","undefined","removeOption","React","Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","innerProps","otherProps","isFocused","objectWithoutProperties","otherInnerProps","onMouseMove","onMouseOver","newProps","objectSpread","chunk_762c4cd6_browser_esm","assign","children","ReferenceForm","GenotypeSelect_GenotypeSelector","CompareForm","count","rm","filter","opt","key","concat","addOption","A","prevProps","prevState","snapshot","displayFormats","comparisonFormats","heatFormat","heatColorFormat","TrackOptions","displayAs","compare","filters","heat","heatColor","viewConfig","maxValue","minValue","setConfiguration","format","side","forEach","gt","feature","glyph","display","draw_as","invert_value","min","max","width","offset","bin_size","bin_min","bin_max","by_class","class_filter","map","class_offset","class_heat","draw_label","max_distance","border","value_base","generate_bins","count_classes","transparent","transparent_percent","enable_pileup","border_width","class_space","optionsUpdate","toLowerCase","displayChange","compareChange","filterChange","heatColorChange","heatChange","maxChange","parseInt","target","hapMax","minChange","_this$state2","filterFormats","isMulti","name","type","id","placeholder","onInput","e","rulerDisplayOptions","BaseOptions","rulerDisplay","binSize","rulerInterval","title","rulerChange","values","titleChange","binChange","intervalChange","OptionsForm","group","general","tick_interval","display_ruler","setOptions","BaseOptionsSelect_BaseOptions","TrackOptionsSelect_TrackOptions","About","ReferenceGenotype","hideInfo","maxHeight","href","ComparisonGenotype","GeneralOptions","DisplayNone","DisplayHaplotype","DisplayHistogram","DisplayHeat","HelpModal","About_About","ReferenceGenotype_ReferenceGenotype","ComparisonGenotype_ComparisonGenotype","GeneralOptions_GeneralOptions","DisplayNone_DisplayNone","DisplayHistogram_DisplayHistogram","DisplayHeat_DisplayHeat","DisplayHaplotype_DisplayHaplotype","closeAction","DataModal","quality","gffOptions","chromosome","diff","same","total","exportImage","blob","url","URL","createObjectURL","saveImage","link","document","download","body","appendChild","click","onClickImage","paper","window","cvit","model","console","log","encodeURIComponent","project","exportSVG","asString","view","element","toBlob","onClickData","gff","data","gffOpts","hasOwnProperty","dataGroup","features","line","seqName","source","start","end","score","strand","frame","attributes","attribute","win","open","write","evt","onSelect","onChecked","checked","App","referenceDataset","priorRequest","request","interval","response","hideOptions","showModal","refMax","loadDatasets","fetch","then","json","slice","val","result","JSON","parse","stringify","onSubmit","requestString","classes","query","i","Error","_viewConfig","getElementById","visibility","_viewData","appendData","method","headers","Content-Type","_viewLayout","chrOrder","_setChrOrder","vd","keys","chr","maxScore","setView","catch","_combineObjects","_redraw","setDirty","_inform","handleCloseModal","handleOpenModal","gts","lib_default","isOpen","onRequestClose","shouldCloseOnOverlayClick","DownloadModal_DataModal","HelpModal_HelpModal","overflow","ReferenceForm_ReferenceForm","CompareForm_CompareForm","OptionsForm_OptionsForm","Boolean","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b593563.chunk.js","sourcesContent":["import React  from 'react';\nimport Select, {createFilter, components} from 'react-select';\nimport {SketchPicker} from 'react-color';\n\nconst popover = {\n\tposition: 'absolute',\n\tzIndex: '2'\n}\n\nconst cover = {\n\tposition: 'fixed',\n\ttop: '0px',\n\tright: '0px',\n\tbottom: '0px',\n\tleft: '0px',\n}\n\nexport default class GenotypeSelector extends React.Component {\n\n\tstate = {\n\t\tselectedDataset: null,\n\t\tselectedGenotype: null,\n\t\tdisplayColorPicker: false,\n\t\tcolor: '#19741A'\n\t}\n\n\tformatDatasetValue(){\n\t\treturn {\n\t\t\tdataset: this.state.selectedDataset || null,\n\t\t\tgenotype: this.state.selectedGenotype || null,\n\t\t\tcolor: this.state.color || null\n\t\t}\n\t}\n\n\tdatasetChange = (selectedDataset) => {\n\t\tthis.setState({ selectedDataset, selectedGenotype: null });\n\t\tthis.props.setDataset(selectedDataset);\n\t\tlet append = { dataset: selectedDataset, genotype:null, color: this.state.color||null};\n\t\tthis.props.appendDataset(this.props.idx, append)\n\t}\n\n\tgtChange = (selectedGenotype) => {\n\t\tthis.setState({ selectedGenotype });\n\t\tlet append = { dataset: this.state.selectedDataset, genotype: selectedGenotype, color: this.state.color||null};\n\t\tthis.props.appendDataset(this.props.idx, append);\n\t}\n\n\tcolorClick = () => {\n\t\tthis.setState({displayColorPicker : true})\n\t}\n\n\tcolorClose = () => {\n\t\tthis.setState({displayColorPicker : false})\n\t\tthis.props.appendDataset(this.props.idx, this.formatDatasetValue())\n\t}\n\n\tcolorSet = (color) => {\n\t\tthis.setState({color: color.hex})\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.selected){\n\t\t\tthis.setState({'selectedDataset':this.props.selected})\n\t\t}\n\t}\n\trender() {\n\t\tconst { selectedDataset, selectedGenotype } = this.state;\n\t\tconst { idx } = this.props;\n\t\tconst gtOpt = this.props.genotypes !== null ? this.props.genotypes : [];\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className={'pure-g genotype-select'}>\n\t\t\t\t<div className={'pure-u-1-12 l-box '}>\n\t\t\t\t\t<span> Color </span>\n\t\t\t\t\t<div className={'fake-button git-option'} onClick={this.colorClick} style={{background:this.state.color, zIndex:1 }} />\n\t\t\t\t\t{ this.state.displayColorPicker\n\t\t\t\t\t\t?<div>\n\t\t\t\t\t\t\t<div style={ cover } onClick={this.colorClose} />\n\t\t\t\t\t\t\t<div style={ popover }>\n\t\t\t\t\t\t\t\t<SketchPicker color={ this.state.color } onChange={ this.colorSet } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className={'pure-u-5-12 l-box'}>\n\t\t\t\t\t<span> Dataset </span>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdefaultValue={this.props.selected || null}\n\t\t\t\t\t\tlabel=\"Dataset\"\n\t\t\t\t\t\tclassName=\"basic-single git-option\"\n\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\tvalue={selectedDataset}\n\t\t\t\t\t\tisClearable\n\t\t\t\t\t\tisDisabled={this.props.selected}\n\t\t\t\t\t\tonChange={this.datasetChange}\n\t\t\t\t\t\tfilterOption={createFilter({ignoreAccents: false})}\n\t\t\t\t\t\toptions={this.props.datasets}\n\t\t\t\t\t\tcomponents={{Option: CustomOption}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={'pure-u-1-3 l-box'}>\n\t\t\t\t\t<span> Genotype </span>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName=\"basic-single git-option\"\n\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\tvalue={selectedGenotype}\n\t\t\t\t\t\tisClearable\n\t\t\t\t\t\tisDisabled={gtOpt.length === 0}\n\t\t\t\t\t\tonChange={this.gtChange}\n\t\t\t\t\t\tfilterOption={createFilter({ignoreAccents: false})}\n\t\t\t\t\t\toptions={gtOpt}\n\t\t\t\t\t\tcomponents={{Option: CustomOption}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{this.props.removeOption !== undefined\n\t\t\t\t\t? <div className={'pure-u-1-12 l-box'}>\n\t\t\t\t\t\t<span>Remove</span>\n\t\t\t\t\t\t<div className={'fake-button git-option'} onClick={()=> this.props.removeOption(idx)} > X </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass CustomOption extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst {innerProps, isFocused, ...otherProps} = this.props;\n\t\tconst {onMouseMove, onMouseOver, ...otherInnerProps} = innerProps;\n\t\tconst newProps = {innerProps: {...otherInnerProps}, ...otherProps};\n\t\treturn (\n\t\t\t<components.Option {...newProps} className=\"git-option-component\">{this.props.children}\n\t\t\t</components.Option>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport GenotypeSelector from './GenotypeSelect';\n\nexport default class ReferenceForm extends React.Component {\n\trender() {\n\n\t\treturn (\n\t\t\t<fieldset className={'genotype-field'}>\n\t\t\t\t<legend> Reference Genotype</legend>\n\t\t\t\t<GenotypeSelector\n\t\t\t\t\tdatasets={this.props.datasets}\n\t\t\t\t\tsetDataset={this.props.setDataset}\n\t\t\t\t\tappendDataset={this.props.appendDataset}\n\t\t\t\t\tgenotypes={this.props.genotypes}\n\t\t\t\t\tidx={0}\n\t\t\t\t/>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport GenotypeSelector from './GenotypeSelect';\n/**\n * A counter button: tap the button to increase the count.\n */\nexport default class CompareForm extends React.Component {\n\n\tstate = {\n\t\toptions: [],\n\t\tcount: 1\n\t};\n\n\tremoveOption = (rm) => {\n\t\tlet options = this.state.options.filter(opt => {\n\t\t\treturn opt.key !== `${rm}`;\n\t\t});\n\t\tthis.props.appendDataset(rm,null);\n\t\tthis.setState({options});\n\t}\n\n\taddOption = () => {\n\t\tlet options = this.state.options.concat([\n\t\t\t<GenotypeSelector\n\t\t\t\tkey={this.state.count}\n\t\t\t\tidx={this.state.count}\n\t\t\t\tselected={this.props.selected}\n\t\t\t\tgenotypes={this.props.genotypes}A\n\t\t\t\tappendDataset={this.props.appendDataset}\n\t\t\t\tremoveOption={this.removeOption}\n\t\t\t/>\n\t\t]);\n\t\tthis.setState({options,count:this.state.count+1});\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif(this.props.selected !== prevProps.selected){\n\t\t\tthis.setState({'count':1, 'options':[]})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<fieldset className={'genotype-field'}>\n\t\t\t\t<legend> Comparison Genotypes </legend>\n\t\t\t\t{this.state.options}\n\t\t\t\t<div\n\t\t\t\t\tclassName={'fake-button'}\n\t\t\t\t\tonClick={this.addOption}\n\t\t\t\t>\n\t\t\t\t\tAdd Comparison\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}","import React from 'react';\nimport Select from 'react-select';\n\nconst displayFormats = [\n    {\n        value: 'none',\n        label: 'None'\n    },\n    {\n        value: 'hist',\n        label: 'Histogram'\n    },\n    {\n        value: 'heat',\n        label: 'Heatmap'\n    },\n    {\n        value: 'haplo',\n        label: 'Haplotype',\n    },\n];\n\nconst comparisonFormats = [\n    {\n        value: 'diff',\n        label: 'Different'\n    },\n    {\n        value: 'same',\n        label: 'Same'\n    },\n    {\n        value: 'total',\n        label: 'Total'\n    },\n];\n\nconst heatFormat = [\n    {\n        value: 'low',\n        label: 'Min-Max'\n    },\n    {\n        value: 'high',\n        label: 'Max-Min'\n    },\n];\n\nconst heatColorFormat = [\n    {\n        value: 'white',\n        label: 'White'\n    },\n    {\n        value: 'black',\n        label: 'Black'\n    },\n];\n\nexport default class TrackOptions extends React.Component {\n    state = {\n        displayAs: displayFormats[0],\n        compare: comparisonFormats[0],\n        filters: [],\n        heat: heatFormat[0],\n        heatColor: heatColorFormat[0],\n        viewConfig: {},\n        maxValue: 0,\n        minValue: 0,\n    }\n\n    setConfiguration = (format) => {\n        const {compare,filters, maxValue, minValue} = this.state;\n        const side = this.props.side === 'Right';\n        let count = 1;\n        this.props.genotypes.forEach(gt => {if(gt !== null) count++;});\n        switch (format) {\n            case 'heat':\n                return {\n                    feature: compare.value,\n                    glyph: 'measure',\n                    display: 'heat',\n                    draw_as: 'range',\n                    invert_value: 0,\n                    min: 0,\n                    max: 0,\n                    width: 10,\n                    offset:  side ? 0 : -0,\n                    bin_size: 500000,\n                    bin_min: minValue,\n                    bin_max: maxValue,\n                    by_class: 1,\n                    class_filter: filters.map( filter => filter.value),\n                    class_offset: 2,\n                    class_heat : ['#fff'],\n                    draw_label: 0,\n                    max_distance: 5,\n                    border: 0,\n                    value_base: 10,\n                    generate_bins: 0,\n                    count_classes: 0,\n                    transparent: 0,\n                    transparent_percent: 0.0\n                };\n            case 'hist':\n                return {\n                    feature: compare.value,\n                    glyph: 'measure',\n                    display: 'histogram',\n                    count_classes: 0,\n                    enable_pileup: 0,\n                    generate_bins: 0,\n                    offset: side ? 0 : -0,\n                    width: 3,\n                    bin_min: minValue,\n                    bin_max: maxValue,\n                    bin_size: 500000,\n                    by_class: 1,\n                    class_offset : 0,\n                    class_filter: filters.map( filter => filter.value),\n                    draw_label: 0,\n                    max_distance: count*25,\n                    border: 1,\n                    border_width :0,\n                };\n            case 'haplo':\n                return {\n                    feature : compare.value,\n                    glyph: 'measure',\n                    display: 'histogram',\n                    count_classes: 0,\n                    class_offset: 0,\n                    class_space : 1,\n                    enable_pileup: 0,\n                    generate_bins: 0,\n                    offset: side ? 0 : -0,\n                    width: 3,\n                    bin_min: maxValue -1 > 0 ? maxValue - 1 : 0 ,\n                    bin_max: maxValue > 0 ?  maxValue : 1,\n                    bin_size: 500000,\n                    by_class: 1,\n                    class_filter: filters.map( filter => filter.value),\n                    draw_label: 0,\n                    max_distance: 5,\n                    border: 1,\n                    border_width: 0,\n                };\n            case 'none':\n            default:\n                return {'feature':'none'};\n        }\n    };\n\n    optionsUpdate = (value) => {\n        this.props.optionsUpdate(this.props.side.toLowerCase(),value);\n    }\n\n    displayChange = (displayAs) => {\n        let viewConfig = this.setConfiguration(displayAs.value);\n        if(displayAs.value === 'haplo'){ // make sure haplotype block gets configured correctly\n            const maxValue = this.state.maxValue > 0 ? this.state.maxValue : 1;\n            const minValue = maxValue - 1;\n            this.setState({ displayAs,maxValue,minValue,viewConfig});\n        } else {\n            this.setState({displayAs, viewConfig});\n        }\n        this.optionsUpdate(viewConfig);\n    }\n\n    compareChange = (compare) => {\n        let viewConfig = this.state.viewConfig;\n        viewConfig.feature = compare.value;\n        this.setState({ compare, viewConfig });\n        this.optionsUpdate(viewConfig);\n    }\n\n    filterChange = (filters) => {\n        let viewConfig = this.state.viewConfig;\n        viewConfig.class_filter = filters.map(filter => {if(filter!== null) return filter.value});\n        this.setState({ filters, viewConfig });\n        this.optionsUpdate(viewConfig);\n    }\n\n    heatColorChange = (heatColor) => {\n        let viewConfig = this.state.viewConfig;\n        viewConfig.class_heat = [heatColor.value];\n        this.setState({ heatColor, viewConfig });\n        this.optionsUpdate(viewConfig);\n    }\n\n    heatChange = (heat) => {\n        let viewConfig = this.state.viewConfig;\n        viewConfig.invert_value = heat.value === 'low' ? 0 : 1;\n        this.setState({ heat, viewConfig });\n        this.optionsUpdate(viewConfig);\n    }\n\n    maxChange = (max) => {\n        const maxValue = parseInt(max.target.value) || 0;\n        let viewConfig = this.state.viewConfig;\n\n        if(this.state.displayAs.value === 'haplo'){\n            const hapMax = maxValue > 0 ? maxValue : 1;\n            const minValue = hapMax -1;\n            viewConfig.bin_max = hapMax;\n            viewConfig.bin_min = minValue;\n            this.setState({maxValue,minValue,viewConfig})\n        } else {\n            viewConfig.bin_max = maxValue;\n            this.setState({maxValue,viewConfig})\n        }\n        this.optionsUpdate(viewConfig);\n    }\n\n    minChange = (min) => {\n        const minValue = parseInt(min.target.value) || 0;\n        let viewConfig = this.state.viewConfig;\n        viewConfig.bin_min = minValue;\n        this.setState({minValue,viewConfig});\n        this.optionsUpdate(viewConfig);\n    }\n\n    render(props,state) {\n        const { displayAs, compare, filters, heatColor, heat, maxValue, minValue } = this.state;\n        const { side, genotypes } = this.props;\n        let filterFormats = [];\n        genotypes.forEach( (gt,count) => {\n            if((compare.value === 'total' || count > 0) && gt !== null){\n                filterFormats = filterFormats.concat( gt.genotype);\n            }\n        });\n\n        let filter = displayAs.value !== 'none'\n            ? (<div className={'pure-u-1-3 l-box'}>\n                    <span>Filter Genotypes</span>\n                    <Select\n                        defaultValue={null}\n                        className=\"basic-multi-select git-option\"\n                        isMulti\n                        isClearable\n                        name={\"filterGT\"}\n                        classNamePrefix=\"select\"\n                        value={filters}\n                        onChange={this.filterChange}\n                        options={filterFormats}\n                    />\n                </div>\n            )\n            : null;\n\n        return (\n            <fieldset className={'genotype-field'}>\n                <legend> {`${side} Options`} </legend>\n                <div className={'pure-g genotype-select'}>\n                    <div className={'pure-u-1-6 l-box'}>\n                        <span>Display Type</span>\n                        <Select\n                            defaultValue={displayFormats[0]}\n                            className=\"basic-single git-option\"\n                            classNamePrefix=\"select\"\n                            value={displayAs}\n                            label={\"Display As:\"}\n                            onChange={this.displayChange}\n                            options={displayFormats}\n                        />\n                    </div>\n                    {displayAs.value !== 'none' ?\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span>Comparison</span>\n                            <Select\n                                defaultValue={comparisonFormats[0]}\n                                className=\"basic-single git-option\"\n                                classNamePrefix=\"select\"\n                                value={compare}\n                                label={`Comparison ${side}`}\n                                onChange={this.compareChange}\n                                options={comparisonFormats}\n                            />\n                        </div>\n                        : null\n                    }\n                    {filter}\n                    {displayAs.value === 'none'\n                        ? null\n                        :\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span>{displayAs.value === 'heat' || displayAs.value === 'hist' ? 'Max Value' : 'Threshold' }</span>\n                            <input type={'text'} value={maxValue} className={'pure-u-1-1 l-box git-option'} id={`max-${side}`} placeholder={'0'} onInput={(e) => this.maxChange(e)}/>\n\n                        </div>\n                    }\n                    {displayAs.value !== 'none' && displayAs.value !== 'haplo'\n                        ?\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span>Min Value</span>\n                            <input type={'text'} value={minValue} className={'pure-u-1-1 l-box git-option'} id={`min-${side}`} placeholder={'0'} onInput={(e) => this.minChange(e)}/>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                {displayAs.value === 'heat'\n                    ?\n                    <div className={'pure-g genotype-select'}>\n                        <div className={'pure-u-1-6 l-box'}>\n                            <div className={'pure-u-1-1 l-box'}> <br/> </div>\n                        </div>\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span>Heat Base Color</span>\n                            <Select\n                                defaultValue={heatColorFormat[0]}\n                                className=\"basic-single git-option\"\n                                classNamePrefix=\"select\"\n                                value={heatColor}\n                                onChange={this.heatColorChange}\n                                options={heatColorFormat}\n                            />\n                        </div>\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span>Heat Direction</span>\n                            <Select\n                                defaultValue={heatFormat[0]}\n                                className=\"basic-single git-option\"\n                                classNamePrefix=\"select\"\n                                value={heat}\n                                onChange={this.heatChange}\n                                options={heatFormat}\n                            />\n                        </div>\n                    </div>\n                    :\n                    null}\n            </fieldset>\n        );\n    }\n}","import React from 'react';\nimport Select from 'react-select';\n\nconst rulerDisplayOptions = [\n    {\n        value: 'L',\n        label: 'Left'\n    },\n    {\n        value: 'R',\n        label: 'Right'\n    },\n    {\n        value: '1',\n        label: 'Both'\n    },\n    {\n        value: '0',\n        label: 'None'\n    },\n];\n\nexport default class BaseOptions extends React.Component {\n    state = {\n        rulerDisplay : rulerDisplayOptions[0],\n        binSize : 500000,\n        rulerInterval: 5000000,\n        title: '',\n    }\n\n    optionsUpdate = (value) => {\n        this.props.optionsUpdate('general',value);\n    }\n\n    rulerChange = (rulerDisplay) => {\n        let values = this.state;\n        values.rulerDisplay = rulerDisplay;\n        this.setState({rulerDisplay});\n        this.optionsUpdate(values);\n    }\n\n    titleChange = (e) => {\n        const title = e.target.value;\n        let values = this.state;\n        values.title = title;\n        this.setState({title});\n        this.optionsUpdate(values);\n    }\n\n    binChange = (e) => {\n        const binSize = parseInt(e.target.value) || 1;\n        let values = this.state;\n        values.binSize = binSize;\n        this.setState({binSize});\n        this.optionsUpdate(values);\n    }\n\n    intervalChange = (e) => {\n        const rulerInterval = parseInt(e.target.value) || 1;\n        let values = this.state;\n        values.rulerInterval = rulerInterval;\n        this.setState({rulerInterval});\n        this.optionsUpdate(values);\n    }\n\n    render(props,state) {\n        const { rulerDisplay, binSize, rulerInterval, title } = this.state;\n        return (\n            <fieldset className={'genotype-field'}>\n                <legend> General Options </legend>\n                <div className={'pure-g genotype-select'}>\n                    <div className={'pure-u-1-2 l-box'}>\n                        <span> Title </span>\n                        <input type={'text'} value={title} className={'pure-u-1-1 l-box git-option'} id={`title-gen`} placeholder={''} onInput={e=>this.titleChange(e)} />\n                    </div>\n                    <div className={'pure-u-1-6 l-box'}>\n                        <span> Bin Size </span>\n                        <input type={'text'} value={binSize} className={'pure-u-1-1 l-box git-option'} id={`binsize-gen`} placeholder={'500000'} onInput={e=>this.binChange(e)}/>\n                    </div>\n                    <div className={'pure-u-1-6 l-box'}>\n                        <span> Ruler Display </span>\n                        <Select\n                            defaultValue={rulerDisplayOptions[0]}\n                            className=\"basic-single git-option\"\n                            classNamePrefix=\"select\"\n                            value={rulerDisplay}\n                            label={\"Comparison\"}\n                            onChange={this.rulerChange}\n                            options={rulerDisplayOptions}\n                        />\n                    </div>\n                    {rulerDisplay.value !== '0'\n                        ?\n                        <div className={'pure-u-1-6 l-box'}>\n                            <span> Ruler Interval </span>\n                            <input type={'text'} value={rulerInterval} className={'pure-u-1-1 l-box git-option'} id={`rulertic-gen`}\n                                   placeholder={'5000000'} onInput={e=> this.intervalChange(e)}/>\n                        </div>\n                        : null\n                    }\n                </div>\n            </fieldset>\n        );\n    }\n}","import React from 'react';\nimport TrackOptions from \"./TrackOptionsSelect\";\nimport BaseOptions from \"./BaseOptionsSelect\";\n\nexport default class OptionsForm extends React.Component {\n\tstate = {\n\t\t'binSize': 500000,\n\t}\n\n\toptionsUpdate = (group,value) => {\n\t\tlet options = this.props.options;\n\n\t\tlet binSize = this.state.binSize;\n\t\tswitch (group) {\n\t\t\tcase 'left':\n\t\t\t\toptions.left = value;\n\t\t\t\toptions.left.bin_size = binSize;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\toptions.right = value;\n\t\t\t\toptions.right.bin_size = binSize;\n\t\t\t\tbreak;\n\t\t\tcase 'general':\n\t\t\tdefault:\n\t\t\t\tbinSize = value.binSize;\n\t\t\t\toptions.general.title = value.title;\n\t\t\t\toptions.general.tick_interval = value.rulerInterval;\n\t\t\t\toptions.general.display_ruler = value.rulerDisplay.value;\n\t\t\t\toptions.left.bin_size = binSize;\n\t\t\t\toptions.right.bin_size = binSize;\n\t\t\t\tthis.setState({binSize});\n\t\t}\n\t\tthis.props.setOptions(options);\n\t}\n\n\trender(props,state) {\n\t\tconst { genotypes } = this.props;\n\t\treturn (\n\t\t\t<fieldset className={'genotype-field'} >\n\t\t\t\t<legend>Options </legend>\n\t\t\t\t<BaseOptions optionsUpdate={(group,value)=>this.optionsUpdate(group,value)} />\n\t\t\t\t<TrackOptions side={'Left'} genotypes={genotypes} optionsUpdate={(group,value)=>this.optionsUpdate(group,value)}/>\n\t\t\t\t<TrackOptions side={'Right'} genotypes={genotypes} optionsUpdate={(group,value)=>this.optionsUpdate(group,value)}/>\n\t\t\t</fieldset>\n\t\t);\n\t}\n}","import React from 'react';\n\nexport default class About extends React.Component {\n    render () {\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <h6> About </h6>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'pure-u-1-1 l-box modal-section'}>\n                        <p> GCViT: a multiple chromosome visualisation tool for the comparison of multiple accessions from a single dataset. </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class ReferenceGenotype extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Reference Genotype </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>\n                                <ul>\n                                    <li> Pick a Color that will represent the reference genome. Please note that this color will only show up when “total” is indicated in the display options. </li>\n                                    <li> Pick the dataset that has your genotype of interest and will be used in this comparison. All of these datasets (VCF files) can be found at the SoyBase data store located at <a href=\"https://soybase.org/data/public/Glycine_max\"> soybase.org/data/public/Glycine_max </a>\n                                        <br/> Please note this is dataset will also be used in the next section “Add a Comparison.” </li>\n                                    <li>Select which genotype will be the reference by either typing in the name of the genotype or using the pull down menu to see available genotypes. For comparisons, each selected genotyped with be compared against this reference.</li>\n                                </ul>\n                                *(note for the 50K dataset, it will take a few seconds for the lines to pop up since there are over 20,000 lines in the dataset.)\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class ComparisonGenotype extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Comparison Genotype </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>\n                                <ul>\n                                    <li> Pick a Color that will represent the reference genome. Please note that this color will only show up when “total” is indicated in the display options. </li>\n                                    <li> At this time, comparisons may only be made within the dataset of the selected reference. </li>\n                                    <li> Select which genotype will be the reference by either typing in the name of the genotype or using the pull down menu to see available genotypes. For comparisons, each selected genotyped with be compared against this reference.</li>\n                                    <li> Remove a comparison by clicking on the X </li>\n                                </ul>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class GeneralOptions extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> General Options </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p> <b>Title</b> <i>Default: blank</i>  Title included on the display. </p>\n                            <p> <b>Bin Size</b> <i>Default: 500000bp</i> Each chromosome is broken down into bins for calculating the requested data. This is the size per bin in base pairs.\n                            It is recommended to not go much lower than this default, as it becomes harder to see differences in the displayed data.</p>\n                            <p> <b>Ruler Display</b> <i>Default: left</i> Where ruler is placed on the generated image. </p>\n                            <p> <b>Ruler Interval</b> <i>Default 5000000</i> Distance in bp between major divisions on the ruler. Each major division will have one minor division between. Any value under 1000000 can lead to a rather cramped display.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DisplayNone extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Display Type: None </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>Don't render anything on this side of the chromosome backbone.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DisplayHaplotype extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Display Type: Haplotype </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>Shows SNPs as block regions that only display if the count in the bin meets the provided threshold.</p>\n                            <p>\n                                This Display is good for:\n                                <ul>\n                                    <li> Viewing inheritance when comparing a line with its parents.</li>\n                                </ul>\n                            </p>\n                            <p> <b>Comparison</b> <i>Default: different</i>  Which comparison with the reference to display.\n                                <ul>\n                                    <li><b>Different</b>: Positions where reference and comparison line have different alleles.</li>\n                                    <li><b>Same</b>: Positions where reference and comparison line have the same alleles.</li>\n                                    <li><b>Total</b>: Total number of SNPs for reference and comparison, alongside a count for locations where the allele was undefined.</li>\n                                </ul>\n                            </p>\n                            <p> <b>Filter Genotypes</b> <i>Default: all [blank]</i> Allows the restriction of the displayed genotypes when more-than-one is available,\n                            due to either more-than-one comparison, or using the total comparison. If not empty, only the selected genotypes will display.  This option is useful if the user would like to see the differences between the reference and each comparison on opposite sides of the chromosome.\n                            </p>\n                            <p> <b>Threshold</b> <i>Default: 1</i> The glyph is only drawn if the count matches or exceeds this number.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DisplayHistogram extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Display Type: Histogram </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>Shows SNPs as block regions with a height that is proportional to the count in the bin and the provided min and max values.\n                                Similar to the heat map option, but uses volume instead of color to indicate bin density.</p>\n                            <p> <b>Comparison</b> <i>Default: different</i>  Which comparison with the reference to display.\n                                <ul>\n                                    <li><b>Different</b>: Positions where reference and comparison line have different alleles.</li>\n                                    <li><b>Same</b>: Positions where reference and comparison line have the same alleles.</li>\n                                    <li><b>Total</b>: Total number of SNPs for reference and comparison, alongside a count for locations where the allele was undefined.</li>\n                                </ul>\n                            </p>\n                            <p> <b>Filter Genotypes</b> <i>Default: all [blank]</i> Allows the restriction of the displayed genotypes when more-than-one is available,\n                            due to either more-than-one comparison, or using the total comparison. If not empty, only the selected genotypes will display.  This option is useful if the user would like to see the differences between the reference and each comparison on opposite sides of the chromosome.\n                            </p>\n                            <p> <b>Min Value</b> <i>Default: 0</i> Value cuttoff for displaying any height on the glyph. Any count equal to or smaller than this number will not be displayed.</p>\n                            <p> <b>Max Value</b> <i>Default: 0</i>  Here, 0 is shorthand for the largest count in the reference across all bins. Value cutoff for displaying maximum height on the glyph. Any count equal to or larger than this number will be displayed as the full height.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DisplayHeat extends React.Component {\n    state= {hideInfo:true};\n    render () {\n        const {hideInfo} = this.state;\n        return (\n            <div>\n                <div className={'pure-g'}>\n                    <div\n                        className={'pure-u-1-1 l-box fake-button'}\n                        onClick={()=>{this.setState({hideInfo:!hideInfo})}}\n                    >\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                            <div className={'pure-u-5-6 l-box'}> Display Type: Heatmap </div>\n                            <div className={'pure-u-1-12 l-box'} > <div className={hideInfo ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'pure-g'}>\n                    <div className={'help-text pure-g'} style={{maxHeight: hideInfo ? '0px' : '50%'}}>\n                        <div className={'pure-u-1-1 l-box modal-section'}>\n                            <p>Shows SNPs as block regions with a color that is proportional to the count in the bin and the provided min and max values.\n                                Similar to the heat map option, but color instead of volume to indicate bin density.</p>\n                            <p> <b>Comparison</b> <i>Default: different</i>  Which comparison with the reference to display.\n                                <ul>\n                                    <li><b>Different</b>: Positions where reference and comparison line have different alleles.</li>\n                                    <li><b>Same</b>: Positions where reference and comparison line have the same alleles.</li>\n                                    <li><b>Total</b>: Total number of SNPs for reference and comparison, alongside a count for locations where the allele was undefined.</li>\n                                </ul>\n                            </p>\n                            <p> <b>Filter Genotypes</b> <i>Default: all [blank]</i> Allows the restriction of the displayed genotypes when more-than-one is available,\n                            due to either more-than-one comparison, or using the total comparison. If not empty, only the selected genotypes will display.  This option is useful if the user would like to see the differences between the reference and each comparison on opposite sides of the chromosome.\n                            </p>\n                            <p> <b>Min Value</b> <i>Default: 0</i> Value cuttoff for displaying any height on the glyph. Any count equal to or smaller than this number will be displayed as full selected base color.</p>\n                            <p> <b>Max Value</b> <i>Default: 0</i>  Here, 0 is shorthand for the largest count in the reference across all bins. Value cutoff for displaying maximum height on the glyph. Any count equal to or larger than this number will be displayed as the full feature selected color.</p>\n                            <p> <b>Heat Base Color</b> <i>Default: white</i> Choose to go from white -> color or black -> color </p>\n                            <p> <b>Heat Direction</b> <i>Default: Min-Max</i>  Render heat low-to-high as  base -> color (Min-Max) or color -> base (Max-Min) </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport About from \"./HelpTopics/About\";\nimport ReferenceGenotype from \"./HelpTopics/ReferenceGenotype\";\nimport ComparisonGenotype from \"./HelpTopics/ComparisonGenotype\";\nimport GeneralOptions from \"./HelpTopics/GeneralOptions\";\nimport DisplayNone from \"./HelpTopics/DisplayNone\";\nimport DisplayHaplotype from \"./HelpTopics/DisplayHaplotype\";\nimport DisplayHistogram from \"./HelpTopics/DisplayHistogram\";\nimport DisplayHeat from \"./HelpTopics/DisplayHeat\";\n\nexport default class HelpModal extends React.Component {\n    render () {\n        return(\n            <div className={\"modal-area selector-container\"}>\n                <div className={\"modal-content\"} >\n                    <h5> GCViT - Genotype Comparison Visualisation Tool </h5>\n                    <hr />\n                    <div className={'modal-contents'}>\n                        <About/>\n                        <h6> Genotypes </h6>\n                        <ReferenceGenotype/>\n                        <ComparisonGenotype/>\n                        <h6> Options </h6>\n                        <GeneralOptions/>\n                        <DisplayNone/>\n                        <DisplayHistogram/>\n                        <DisplayHeat/>\n                        <DisplayHaplotype/>\n                    </div>\n                </div>\n                <div className={'modal-close'}>\n                    <button className={'pure-button  button-display modal-confirm'}\n                            onClick={()=>this.props.closeAction()}\n                    > Close </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport default class DataModal extends React.Component {\n    state = {\n        name: 'cvit',\n        format: 'svg',\n        quality: .95,\n        gffOptions: {\n            'chromosome':true,\n            'diff':true,\n            'same':true,\n            'total':true\n        }\n    }\n\n    exportImage = (blob) => {\n        let url = URL.createObjectURL(blob);\n        this.saveImage(url);\n    }\n\n    saveImage = (url) => {\n        let name = this.state.name !== '' ? this.state.name : 'cvit';\n        name += `.${this.state.format}`;\n        let link = document.createElement('a');\n        link.download = name;\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    onClickImage = () => {\n        let paper = window.cvit.model.paper;\n        console.log(paper);\n        if(this.state.format === 'svg'){\n            let url = 'data:image/svg+xml;utf8,' +\n                encodeURIComponent(paper.project.exportSVG({asString:true}));\n            this.saveImage(url);\n        } else {\n            paper.project.view.element.toBlob((blob) => this.exportImage(blob));\n        }\n    }\n\n    onClickData = () => {\n        let gff = '##gff-version 3.2.1';\n        let data = window.cvit.model.data;\n        let gffOpts = this.state.gffOptions;\n        for (let group in data) {\n            if(data.hasOwnProperty(group) && gffOpts[group]) {\n                let dataGroup = data[group];\n                if( dataGroup.hasOwnProperty('features')) {\n                    dataGroup.features.forEach(feature => {\n                        let line = `${feature.seqName}\\t${feature.source}\\t${feature.feature}\\t${feature.start}\\t${feature.end}\\t${feature.score}\\t${feature.strand}\\t${feature.frame}`;\n                        let attributes = '';\n                        for (let key in feature.attribute) {\n                            if (feature.attribute.hasOwnProperty(key)) {\n                                attributes += `${key}=${feature.attribute[key]};`\n                            }\n                        }\n                        gff +=`\\n${line}\\t${attributes}`;\n                    });\n                }\n            }\n        }\n        let url = 'data:text/plain;utf8,' +\n            encodeURIComponent(gff);\n        let win = window.open();\n        win.document.write('<iframe src=\"' + url  + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>');\n        win.download('gcvit.gff');\n        // link.href = url;\n        // document.body.appendChild(link);\n        // link.click();\n    }\n\n    onInput = (evt) =>{\n        this.setState({name:evt.target.value});\n    }\n\n    onSelect = (evt) => {\n        this.setState({format:evt.target.value});\n    }\n\n    onChecked = (evt) => {\n        let gffOptions = this.state.gffOptions;\n        gffOptions[evt.target.value] = !gffOptions[evt.target.value];\n        this.setState( {gffOptions});\n    }\n    render(props,state){\n        let {name,format,gffOptions} = this.state;\n        return(\n            <div className={\"modal-area selector-container\"}>\n                <div className={\"modal-content\"} >\n                    <h5> Downloads </h5>\n                    <hr />\n                    <div className={'modal-contents'}>\n                        <div className={'pure-g'}>\n                            <div className={'pure-u-1-1 l-box cvit cvit-modal'} id={'export-modal'} >\n                                <h5> Download Image </h5>\n                                <p> Download the current view as an image.</p>\n\n                                <form style={{width:'100%'}}>\n                                    <h6> Image Settings: </h6>\n                                    <tbody>\n                                    <tr>\n                                        <td><span>File Name: </span></td>\n                                        <td>\n                                            <input\n                                                type={'text'}\n                                                value={name}\n                                                onInput={(evt)=>this.onInput(evt)}\n                                                placeholder={'cvit'}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td> <span> File Type: </span> </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-svg'}\n                                                    type={'radio'}\n                                                    value={'svg'}\n                                                    onChange={(evt)=>this.onSelect(evt)}\n                                                    checked={format === 'svg'} />\n                                                <span> svg </span>\n                                            </label>\n                                        </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-png'}\n                                                    type={'radio'}\n                                                    value={'png'}\n                                                    onChange={(evt)=>this.onSelect(evt)}\n                                                    checked={format === 'png'}\n                                                />\n                                                <span> png </span>\n                                            </label>\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </form>\n                                <button className={'pure-button button-display modal-confirm'}\n                                        onClick={()=>this.onClickImage()}\n                                > Export Image </button>\n                            </div>\n                        </div>\n                        <div className={'pure-g'}>\n                            <hr />\n                            <div className={'pure-u-1-1 l-box cvit cvit-modal'} id={'export-modal'} >\n                                <h5> Download Data </h5>\n                                <p> Download data as a gff </p>\n\n                                <form style={{width:'100%'}}>\n                                    <h6> GFF Settings: </h6>\n                                    <tbody>\n                                    <tr>\n                                        <td> <span> Include: </span> </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-chr'}\n                                                    type={'checkbox'}\n                                                    value={'chromosome'}\n                                                    onChange={(evt)=>this.onChecked(evt)}\n                                                    checked={gffOptions.chromosome}\n                                                />\n                                                <span> chromosome </span>\n                                            </label>\n                                        </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-diff'}\n                                                    type={'checkbox'}\n                                                    value={'diff'}\n                                                    onChange={(evt)=>this.onChecked(evt)}\n                                                    checked={gffOptions.diff}\n                                                />\n                                                <span> different </span>\n                                            </label>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>  </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-same'}\n                                                    type={'checkbox'}\n                                                    value={'same'}\n                                                    onChange={(evt)=>this.onChecked(evt)}\n                                                    checked={gffOptions.same}\n                                                />\n                                                <span> same </span>\n                                            </label>\n                                        </td>\n                                        <td>\n                                            <label>\n                                                <input\n                                                    id={'opt-total'}\n                                                    type={'checkbox'}\n                                                    value={'total'}\n                                                    onChange={(evt)=>this.onChecked(evt)}\n                                                    checked={gffOptions.total}\n                                                />\n                                                <span> total </span>\n                                            </label>\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </form>\n\n                                <button className={'pure-button button-display modal-confirm'}\n                                        onClick={()=>this.onClickData()}\n                                > Download Data </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={'modal-close'}>\n                    <button className={'pure-button  button-display modal-confirm'}\n                            onClick={()=>this.props.closeAction()}\n                    > Close </button>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactModal from 'react-modal';\n\nimport ReferenceForm from './Components/ReferenceForm';\nimport CompareForm from './Components/CompareForm';\nimport OptionsForm from './Components/OptionsForm';\nimport HelpModal from './Components/HelpModal'\nimport DataModal from \"./Components/DownloadModal\";\n\nexport default class App extends React.Component {\n    state = {\n        datasets:[],\n        genotypes: {},\n        referenceDataset: null,\n        selected:[],\n        options: {\n            left:{\n                feature : 'none',\n                offset : -0,\n                draw_label : 0,\n            },\n            right:{\n                feature : 'none',\n                offset : 0,\n                draw_label : 0,\n            },\n            general:{\n                title:'',\n                display_ruler: 'L',\n                tick_interval: 5000000,\n            },\n        },\n        priorRequest:{\n            request:'',\n            interval:50000,\n            response:{}\n        },\n        hideOptions: false,\n        showModal: '',\n        refMax: 0\n    }\n\n    loadDatasets = () => {\n        fetch('api/experiment')\n            .then( response => response.json())\n            .then( datasets => {\n                this.setState({datasets});\n            })\n    }\n\n    appendDataset = (idx,value) => {\n        let selected = this.state.selected.slice();\n        selected[idx]=value;\n        this.setState({selected});\n    }\n\n    setDataset = (referenceDataset) => {\n        let val = referenceDataset.value;\n        if( !this.state.genotypes[val]){\n            fetch(`api/experiment/${val}`)\n                .then(result => result.json())\n                .then( genotype => {\n                    let genotypes = JSON.parse(JSON.stringify(this.state.genotypes));\n                    genotypes[val] = genotype;\n                    this.setState({referenceDataset, genotypes, selected:[]})\n                })\n        } else {\n            this.setState({referenceDataset,selected:[]})\n        }\n    }\n\n    setOptions = (options) => {\n        this.setState(options);\n    }\n\n    onSubmit = () => {\n        const { selected, options, priorRequest } = this.state;\n        let requestString = '';\n        let classes = {};\n        let count = 0;\n        selected.forEach((query, i) => {\n            if (query !== null && query.hasOwnProperty('dataset') && query.hasOwnProperty('genotype')\n                && query.dataset != null && query.genotype != null){\n                count++;\n                requestString =  i === 0 ? requestString+'Ref=' : requestString+'&Variant=';\n                requestString = requestString+encodeURIComponent(`${query.dataset.value}:${query.genotype.value}`);\n                classes[query.genotype.value] = query.color;\n            } else if(i === 0){\n                throw new Error('Reference must be selected.')\n            }\n        });\n        classes['undefined'] = 'black';\n        // Configure cvit model for new view\n        let cvit = window.cvit;\n        let model = cvit.model;\n        model._viewConfig.classes = classes;\n\n        const binSize = options.left.hasOwnProperty('binSize') ? options.left.binSize :\n            options.right.binSize;\n        //fetch new data\n        if( (priorRequest.request !== requestString) ||\n            (binSize !== priorRequest.interval )\n        ) {\n            document.getElementById('cvit-app').style.visibility = 'visible';\n            this.setState({hideOptions:true});\n            model._viewData.same = {};\n            model._viewData.diff = {};\n            model._viewData.total = {};\n\n            model.appendData('api/generateGff', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n                body: requestString,\n            })\n                .then(() =>{\n                    model._viewLayout.chrOrder = model._setChrOrder(model._viewData);\n                    let refMax = 0;\n                    let vd = model._viewData;\n                    Object.keys(vd.total).forEach(key => {\n                        let chr = vd.total[key];\n                        if (chr.hasOwnProperty('maxScore') && chr.maxScore.value > refMax) refMax = chr.maxScore.value;\n                    });\n                    this.setState({priorRequest:{response: model._viewData, request:requestString, interval:binSize, refMax}});\n                    this.setView(options, model, count,refMax);\n                })\n                .catch(e => {\n                    console.log('cvit js error: ', e);\n                });\n        } else {\n            this.setView(options, model,count);\n        }\n    }\n\n    setView = (options,model,count,refMax) =>{\n      //  let vd = model._viewData;\n      //  Object.keys(vd.total).forEach(key => {\n      //      let chr = vd.total[key];\n      //      if (chr.hasOwnProperty('maxScore') && chr.maxScore.value > max) max = chr.maxScore.value;\n      //  });\n        if(options.left.bin_max === 0){\n            options.left.bin_max = options.left.display === 'heat' ? refMax : refMax*count;\n        }\n        if(options.right.bin_max === 0){\n            options.right.bin_max = options.right.display === 'heat' ? refMax : refMax*count;\n        }\n        model._viewConfig.left.class_heat = [];\n        model._viewConfig.right.class_heat = [];\n        model._viewConfig.left.class_filter = [];\n        model._viewConfig.right.class_filter = [];\n        model._viewConfig = model._combineObjects(model._viewConfig, options);\n        model._redraw = true;\n        model.setDirty(true);\n        model._inform();\n    }\n\n    handleCloseModal = () => this.setState({ showModal: '' })\n\n    handleOpenModal = (showModal) => this.setState({showModal})\n\n    componentDidMount() {\n        document.getElementById('cvit-app').style.visibility = 'hidden';\n        this.loadDatasets()\n    }\n\n    render() {\n        const { selected,options,hideOptions,showModal } = this.state;\n        let gts = this.state.referenceDataset !== null && this.state.genotypes[this.state.referenceDataset.value] !== undefined\n            ? this.state.genotypes[this.state.referenceDataset.value]\n            : [];\n        return (\n            <div className={'selector-container'}>\n                <ReactModal\n                    isOpen={showModal === 'data'}\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={true}\n                >\n                    <DataModal closeAction={()=>this.handleOpenModal()} />\n                </ReactModal>\n                <ReactModal\n                    isOpen={showModal === 'help'}\n                    onRequestClose={this.handleCloseModal}\n                    shouldCloseOnOverlayClick={true}\n                >\n                        <HelpModal closeAction={()=>this.handleOpenModal()} />\n                </ReactModal>\n\n                <div\n                    className={'pure-u-1-1 l-box fake-button'}\n                    onClick={()=>{this.setState({hideOptions:!hideOptions})}}\n                >\n                    <div className={'pure-g'}>\n                        <div className={'pure-u-1-12 l-box'} > <div className={hideOptions ? 'arrow-down rotate':'arrow-down'}/> </div>\n                        <div className={'pure-u-5-6 l-box'}> Configure View </div>\n                        <div className={'pure-u-1-12 l-box'} > <div className={hideOptions ? 'arrow-down rotate':'arrow-down'}/> </div>\n                    </div>\n                </div>\n                <form className={'display-options'} style={{maxHeight: hideOptions ? '0px' : '100%', overflow: hideOptions ? 'hidden' : 'visible'}}>\n                    <ReferenceForm datasets={this.state.datasets} setDataset={this.setDataset} appendDataset={this.appendDataset} genotypes={gts} />\n                    {this.state.referenceDataset\n                        ? <CompareForm selected={this.state.referenceDataset} genotypes={gts} appendDataset={this.appendDataset} />\n                        : null\n                    }\n                    <OptionsForm setOptions ={this.setOptions} genotypes={selected} options={options}/>\n                </form>\n                <div className={'pure-g'}>\n                    <button className={'pure-u-1-4 pure-button-primary button-action pure-button'} onClick={this.onSubmit}> Display </button>\n                    <div className={'pure-u-5-24 '}><br /></div>\n                    <button className={'pure-u-1-4  pure-button button-display'} onClick={()=>this.handleOpenModal('data')}> Download </button>\n                    <div className={'pure-u-1-24'} />\n                    <button className={'pure-u-1-4  pure-button button-display'} onClick={()=>this.handleOpenModal('help')}> Help </button>\n                </div>\n            </div>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import '../node_modules/skeleton.css/skeleton.css';\nimport 'purecss/build/grids.css';\nimport 'purecss/build/buttons.css';\nimport './index.css';\nimport './selector.css';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('selector-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}